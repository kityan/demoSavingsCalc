body {
	padding-top: 50px;
	font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;	
}

@media (min-width: 875px) {
	.container {
		width: 870px !important;
	}
}


input, select {
	padding: 2px !important;
	height: auto !important;
}

h1, h2{
	font-weight: bold;	
}

h1 {
	font-size: 24px !important;
	margin-top: 0px;
	margin-bottom: 30px;
}

h2 {
	font-size: 20px !important;
}



.list-group-item label {
	width: 100%;
}


/* buttons */
.btn {
	padding-top: 2px;
	padding-bottom: 2px;	
	border: 0;
}

.btn:active {
	outline: 0;
}

.btn-primary {
	border: 0;
	background: #2FA8FF;
	background-image: -webkit-linear-gradient(top, #2FA8FF, #0189FF);
	background-image: -moz-linear-gradient(top, #2FA8FF, #0189FF);
	background-image: -ms-linear-gradient(top, #2FA8FF, #0189FF);
	background-image: -o-linear-gradient(top, #2FA8FF, #0189FF);
	background-image: linear-gradient(to bottom, #2FA8FF, #0189FF);

}  

.btn-primary:active {
	background: #3cb0fd;
	background-image: -webkit-linear-gradient(top, #3cb0fd, #3498db);
	background-image: -moz-linear-gradient(top, #3cb0fd, #3498db);
	background-image: -ms-linear-gradient(top, #3cb0fd, #3498db);
	background-image: -o-linear-gradient(top, #3cb0fd, #3498db);
	background-image: linear-gradient(to bottom, #3cb0fd, #3498db);
}  



/* table.accounts */

table.accounts {
	margin-bottom: 20px;
	margin-right: 15px;
}

table.accounts td {
	padding-right: 7px;
	padding-bottom: 4px;
}

table.accounts td, 
table.accounts td input {
	font-size: 13px;	
}

table.accounts td:last-child {
	padding-right: 0px;
}

table.accounts .currencySymbol span {
	border-radius: 3px;
	padding: 2px;
	color: #FFF;
	font-weight: normal;
	font-size: 90%;
}

table.accounts th {
	padding-right: 7px;	
	font-size: 13px;
	vertical-align: top;
	line-height: 1;
	padding-bottom: 5px;
}

table.accounts th.account {
	width: 100%
}

table.accounts td.converted {
	text-align: right;
}

table.accounts td.converted span {
	padding-bottom: 5px;
	white-space: nowrap;
}

table.accounts th.interest {
	width: 30%;
}

table.accounts th.interest.disabled {
	color: #CCC;
}


input:disabled {
	color: #CCC;	
}

/* --------------- */

label.interestFlag {
	margin-top: 6px;
}

.baseCurrencySelector {
	margin-top: 4px;
}

.ratesChartContainer p:nth-child(1) {
	line-height: 1;
	font-weight: bold;
	margin-bottom: 0px;
}
.ratesChartContainer p:nth-child(2) {
	margin-top: 0px;
	margin-bottom: 10px;
	font-size: 80%;
	color: #999;
}



/* --------------- */


@colors : #0066CC, #009933, #FF9900, #EE2222, #9933EE;
/* заданные цвета, а не функция, потому что lighten() не подошёл, а fadeout() нельзя из-за наложения rect */
@colorsInterest: #66A3E0, #66C285, #FFC266, #F57A7A, #cd9feb; 
@names  : RUB, USD, EUR, CNY, GBP;



.loop(@i: length(@colors)) when (@i > 0) {
	.loop(@i - 1);
		@color: extract(@colors, @i); 
		@colorInterest: extract(@colorsInterest, @i);
		@name: extract(@names, @i);
		
		table.accounts .currencySymbol.@{name} span {
			background: @color; 
		}
		
		svg.ratesChart .currency.@{name} {
			stroke: @color;  
		}
				
		svg.ratesChart circle.prediction.@{name} {
			fill: @color;
			cursor: s-resize;  
		}
		
		svg.ratesChart text.prediction.@{name} {
			fill: #000;
			font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
			font-size: 13px;
			text-anchor: middle;
			padding-bottom: 3px;
			transform: translate(0px, -10px);
			visibility: hidden;
			pointer-events: none;
		}
		
		svg.savingsChart .currencyGroup.@{name} rect {
			fill: @color;
			vector-effect: non-scaling-stroke;
		}		
		
		svg.savingsChart .currencyGroup.@{name}.interest rect {
			fill: @colorInterest;
		}			

		.currency.@{name} {
			color: @color;  
		}
				
		.currency.@{name} div.symbol {
			background: @color;  
		}		
		
}
.loop();


svg.ratesChart {
	width: 270px;
	height: 190px;

}

svg.savingsChart {
	width: 270px;
	height: 250px;
	margin-bottom: 20px;
}


svg.duringDrag {
	cursor: s-resize;  	
}

svg.ratesChart .grid line {
	shape-rendering: crispEdge;
	stroke: #EEE;	
	stroke-width: 1.5;
}

svg.ratesChart .currency {
	stroke-width: 1.5;
	fill: none;	
}

svg.ratesChart text.xLabelToday {
	transform: translate(2px, 25px);
	text-anchor: middle;
}

svg.ratesChart text.xLabelYear {
	transform: translate(4px, 25px);
	text-anchor: end;
}


svg.ratesChart text.xLabelYearBefore {
	transform: translate(-2px, 25px);
	text-anchor: start;
}


svg.ratesChart .axis path, 
svg.savingsChart .axis path,
svg.ratesChart .axis line
svg.savingsChart .axis line,
{
  fill: none;
  stroke: none;
}


svg.savingsChart text.xLabelToday {
	transform: translate(2px, 20px);
	text-anchor: start;
}

svg.savingsChart text.xLabelYear {
	transform: translate(-2px, 20px);
	text-anchor: end;
}

svg.savingsChart text.xLabelTodayValue {
	transform: translate(2px, 40px);
	text-anchor: start;
	font-size: 16px;
	font-weight: bold;
}

svg.savingsChart text.largeValue {
	font-size: 12px !important;
}

svg.savingsChart text.xLabelYearValue {
	transform: translate(-2px, 40px);
	text-anchor: end;
	font-size: 16px;
	font-weight: bold;	
	
}

svg.savingsChart text.yLabelTickPostfix {
	transform: translate(4px, 4px);
	text-anchor: start;
}





/* currList */

.loop1(@i: length(@colors)) when (@i > 0) {
	.loop1(@i - 1);
		@color: extract(@colors, @i); 
		@name: extract(@names, @i);
		
		.currList .currency.@{name} span {
			font-size: 40px;
			padding: 15px;
			border-radius: 5px;
		}
		
		.currList .currency.@{name} span {
			background: fadeout(@color, 95%);
			color: fadeout(#000, 85%);
		}		
				
		.currList .currency.@{name}.selected span {
			background: @color !important;
			color: #FFF !important; 
			pointer-events: none;
		}		
		
		.currList .currency.@{name} {
			margin-top: 25px;
			margin-bottom: 25px;
			cursor: default;
		}		
		
}
.loop1();


svg, .noselect {
  -webkit-touch-callout: none; 
  -webkit-user-select: none;   
  -moz-user-select: none;      
  -ms-user-select: none;       
  user-select: none;           
}